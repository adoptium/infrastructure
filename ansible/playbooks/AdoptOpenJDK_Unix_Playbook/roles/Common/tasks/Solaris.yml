---
###########
# Solaris #
###########

- name: Set sudoers file
  set_fact:
    Sudoers_File: "/etc/opt/csw/sudoers"
  tags: [jenkins_user, adoptopenjdk]

- name: Check if pkgutil is installed
  shell: pkgutil --version
  failed_when: false
  register: pkgutil_installed
  changed_when: false
  tags:
    - build_tools

# The ansible copy command does not work at this point because it can't find source in the default shell
- name: Install pkgutil
  shell: |
    yes | pkgadd -d http://get.opencsw.org/now CSWpkgutil
    /opt/csw/bin/pkgutil -U
  when:
    - pkgutil_installed.rc != 0
  tags: build_tools

- name: Install Build Tool Packages
  pkgutil: "name={{ item }} state=present"
  with_items: "{{ Build_Tool_Packages }}"
  tags: build_tools

- name: Install additional build tools for x64
  pkgutil: "name={{ item }} state=present"
  with_items: "{{ Additional_Build_Tools_x64 }}"
  when:
    - ansible_architecture == "i386"
  tags: build_tools

- name: Check if Solaris Studio 12.3 is installed
  stat:
    path: /opt/solarisstudio12.3/bin/
  register: solaris_studio
  tags:
    - build_tools
    - solaris_studio
    - adoptopenjdk

- name: Setting Solaris Studio variables (x64)
  set_fact:
    SolarisStudioArch: "x86"
    DownloadURL: "https://ansiblestorageadopt.blob.core.windows.net/solarisstudiox64/SolarisStudio12.3-solaris-x86-pkg.tar.bz2?{{ SolarisStudio12_solaris_x86_SAS_TOKEN }}"
  when:
    - not solaris_studio.stat.exists
    - ansible_architecture == "i386"
  tags:
    - build_tools
    - solaris_studio
    - adoptopenjdk

- name: Setting Solaris Studio variables (sparcv9)
  set_fact:
    SolarisStudioArch: "sparc"
    DownloadURL: "https://ansiblestorageadopt.blob.core.windows.net/solarisstudiosparc/SolarisStudio12.3-solaris-sparc-pkg.tar.bz2?{{ SolarisStudio12_solaris_sparc_SAS_TOKEN }}"
  when:
    - not solaris_studio.stat.exists
    - ansible_architecture == "sun4v"
  tags:
    - build_tools
    - solaris_studio
    - adoptopenjdk

- name: Check if Solaris Studio 12.3 is downloaded
  stat:
    path: "/tmp/SolarisStudio12.3-solaris-{{ SolarisStudioArch }}-pkg.tar.bz2"
  register: solaris_studio_downloaded
  when: not solaris_studio.stat.exists
  tags:
    - build_tools
    - solaris_studio
    - adoptopenjdk

# Stored in Azure Blob Storage (SAS URL set to expire in 2030)
- name: Download Solaris Studio 12.3
  # Original file is at https://www.oracle.com/tools/developerstudio/downloads/solaris-studio-v123-downloads.html
  command: wget "{{ DownloadURL }}" -O /tmp/SolarisStudio12.3-solaris-{{ SolarisStudioArch }}-pkg.tar.bz2
  when: not solaris_studio.stat.exists and not solaris_studio_downloaded.stat.exists
  tags:
    - build_tools
    - solaris_studio
    - adoptopenjdk

- name: Extract Solaris Studio 12.3
  shell: |
    bzcat SolarisStudio12.3-solaris-{{ SolarisStudioArch }}-pkg.tar.bz2 | /bin/tar -xf -
  args:
    chdir: /tmp
  tags:
    - build_tools
    - solaris_studio
    - adoptopenjdk
  when: not solaris_studio.stat.exists

- name: Install Solaris Studio 12.3
  shell: ./SolarisStudio12.3-solaris-{{ SolarisStudioArch }}-pkg/solarisstudio.sh --non-interactive
  args:
    chdir: /tmp
  tags:
    - build_tools
    - solaris_studio
    - adoptopenjdk
  when: not solaris_studio.stat.exists

# The freetype provided by pkgutil isn't detected by the openjdk configure stage. Use the one provided below instead
- name: Check if freetype is installed (sparcv9)
  stat:
    path: /usr/local/include/freetype2
  register: freetype_installed
  when: ansible_architecture == "sun4v"
  tags:
    - build_tools
    - freetype

- name: Download freetype (sparcv9)
  command: wget https://www.ibiblio.org/pub/packages/solaris/sparc/freetype.2.4.9.SPARC.64bit.Solaris.10.pkg -O /tmp/freetype.2.4.9.SPARC.64bit.Solaris.10.pkg
  when:
    - ansible_architecture == "sun4v"
    - not freetype_installed.stat.exists
  tags:
    - build_tools
    - freetype

- name: Install freetype (sparcv9)
  shell: yes a | /opt/csw/bin/pkgutil -iy /tmp/freetype.2.4.9.SPARC.64bit.Solaris.10.pkg
  when:
    - ansible_architecture == "sun4v"
    - not freetype_installed.stat.exists
  tags:
    - build_tools
    - freetype

- name: Check if cups is installed
  stat:
    path: /opt/sfw/cups
  register: cups_installed
  tags:
    - build_tools
    - cups

- name: Download cups 1.4.4
  command: wget https://github.com/apple/cups/releases/download/release-1.4.4/cups-1.4.4-source.tar.gz -O /tmp/cups-1.4.4-source.tar.gz
  when: not cups_installed.stat.exists
  tags:
    - build_tools
    - cups

- name: Extract cups 1.4.4
  shell: gzip -cd cups-1.4.4-source.tar.gz | tar xpf -
  args:
    chdir: /tmp
  when: not cups_installed.stat.exists
  tags:
    - build_tools
    - cups

- name: Compile cups 1.4.4
  shell: |
    cd /tmp/cups-1.4.4
    ./configure --disable-gssapi --disable-ldap --prefix=/opt/sfw/cups
    gmake
    gmake install
  environment:
    PATH: /opt/solarisstudio12.3/bin/:/opt/csw/bin/:/usr/ccs/bin:/usr/bin
  when: not cups_installed.stat.exists
  tags:
    - build_tools
    - cups

# On Sparc we (for an unknown reason) have to provide the source as an additional configure argument. I only ever managed to get configure to successfully work with the combination of both CUPS versions
- name: Check if cups-1.5.4-source is present (sparcv9)
  stat:
    path: /usr/local/cups-1.5.4-src
  register: cups_src
  tags:
    - build_tools
    - cups

- name: Download cups-1.5.4-source (sparcv9)
  command: wget https://github.com/apple/cups/releases/download/release-1.5.4/cups-1.5.4-source.tar.gz -O /tmp/cups-1.5.4-source.tar.gz
  when:
    - ansible_architecture == "sun4v"
    - not cups_src.stat.exists
  tags:
    - build_tools
    - cups

- name: Extract cups-1.5.4-source
  shell: |
    gzip -cd /tmp/cups-1.5.4-source.tar.gz | tar xpf -
    mv /usr/local/cups-1.5.4 /usr/local/cups-1.5.4-src
  args:
    chdir: /usr/local/
  when:
    - ansible_architecture == "sun4v"
    - not cups_src.stat.exists
  tags:
    - build_tools
    - cups

- name: Create symlinks
  file:
    src: /opt/csw/bin/g{{ item }}
    dest: /opt/csw/bin/{{ item }}
    owner: root
    group: root
    state: link
  with_items:
    - tar
    - make
    - sha256sum
  tags: build_tools

# Fixes: GConf Error: Failed to launch configuration server: Failed to execute child process "/usr/lib/sparcv9/gconfd-2" (No such file or directory)
- name: Check if gconfd-2 is in /opt/csw/libexec/
  stat:
    path: /opt/csw/libexec/gconfd-2
  register: gconfd_2_installed

- name: Create symlinks gconfd-2 (sparcv9)
  file:
    src: /usr/lib/gconfd-2
    dest: /usr/lib/sparcv9/gconfd-2
    owner: root
    group: root
    state: link
  when:
    - ansible_architecture == "sun4v"

- name: Create symlinks gconfd-2 (x64)
  file:
    src: /usr/lib/gconfd-2
    dest: /usr/lib/amd64/gconfd-2
    owner: root
    group: root
    state: link
  when:
    - ansible_architecture == "i386"
    - not gconfd_2_installed.stat.exists

- name: Create symlinks gconfd-2 (x64)
  file:
    src: /opt/csw/libexec/gconfd-2
    dest: /usr/lib/amd64/gconfd-2
    owner: root
    group: root
    state: link
  when:
    - ansible_architecture == "i386"
    - gconfd_2_installed.stat.exists

- name: Install Test Tool Packages
  pkgutil: "name={{ item }} state=present"
  with_items: "{{ Test_Tool_Packages }}"
  tags: test_tools

- name: Disable sendmail alerts
  command: "{{ item }}"
  with_items:
    - svcadm disable sendmail
    - svcadm disable sendmail-client
  tags: adoptopenjdk

- name: Modify PATH
  lineinfile:
    path: /etc/profile
    line: PATH=$PATH:/opt/csw/bin/
  tags: adoptopenjdk

- name: Set Java 8 as default
  file:
    src: /opt/csw/java/jdk1.8.0_201/bin/java
    dest: /usr/bin/java
    owner: root
    group: root
    state: link
    force: yes
  tags: build_tools
