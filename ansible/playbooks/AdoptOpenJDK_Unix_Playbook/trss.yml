---
############################################
# AdoptOpenJDK Ansible TRSS Playbook       #
# Currently supports Ubuntu 18 on x64 only #
############################################
- hosts: all
  user: root
  become: yes
  vars:
    TRSS_working_dir: "/home/jenkins/openjdk-test-tools/TestResultSummaryService"
    TRSS_config_path: "/data/db/credentials/trssConf.json"
  tasks:
    - block:
        - name: Load AdoptOpenJDKs variable file
          include_vars: group_vars/all/adoptopenjdk_variables.yml

        - name: Set hostname to trss.adoptopenjdk.net
          hostname:
            name: trss.adoptopenjdk.net
          tags: hostname

        - name: OS update -- apt-get upgrade
          apt: upgrade=safe update_cache=yes
          tags: patch_update

        - name: Download Nodev12.16.1 tarball
          get_url:
            url: https://nodejs.org/dist/v12.16.1/node-v12.16.1-linux-x64.tar.xz
            dest: /tmp/node-v12.16.1-linux-x64.tar.xz
            mode: 0440
          tags: node_install

        - name: Extract Node tarball
          unarchive:
            src: /tmp/node-v12.16.1-linux-x64.tar.xz
            dest: /usr/local/lib/
            copy: False
          tags: node_install

        - name: Create symlinks for node, npm and npx from node install directory to /usr/local/bin/
          file:
            src: /usr/local/lib/node-v12.16.1-linux-x64/bin/{{ item }}
            dest: /usr/local/bin/{{ item }}
            state: link
          with_items:
            - node
            - npm
            - npx
          tags: node_install

        - name: Import MongoDB 4.2 key
          raw: "wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -"
          tags: mongodb

        - name: Create list file for MongoDB
          raw: "echo \"deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list"
          tags: mongodb

        - name: Install API prerequisistes
          apt:
            name: "{{ item }}"
            update_cache: yes
          with_items:
            - git
            - mongodb-org
            - make
            - build-essential
            - g++
          tags:
            - dependencies
            - skip_ansible_lint

        - name: Start mongoDB
          systemd:
            name: mongod
            state: started
          tags: mongodb

        - name: Create Jenkins user
          action: user name={{ Jenkins_Username }} state=present shell=/bin/bash
          failed_when: false
          tags: jenkins_user

        - name: Install NPM packages globally
          npm:
            name: "{{ item }}"
            global: yes
            state: present
          with_items:
            - forever
            - forever-service
            - yarn
          tags: forever

        # Skipping linting as we want the latest checkouts (lint error 401)
        - name: Git Clone openjdk-test-tools.git
          git:
            repo: 'https://github.com/AdoptOpenJDK/openjdk-test-tools.git'
            dest: "/home/{{ Jenkins_Username }}/openjdk-test-tools"
            update: yes
            force: yes
          tags: skip_ansible_lint

        - name: Change owner permissions
          file:
            path: /home/{{ Jenkins_Username }}/openjdk-test-tools
            owner: "{{ Jenkins_Username }}"
            group: "{{ Jenkins_Username }}"

        - name: npm ci && npm run build of test-result-summary-client
          shell: cd /home/{{ Jenkins_Username }}/openjdk-test-tools/test-result-summary-client/ && npm ci && npm run build

        - name: npm ci of TestResultSummaryService
          shell: cd /home/{{ Jenkins_Username }}/openjdk-test-tools/TestResultSummaryService/ && npm ci

        - name: Install nginx seperately
          apt:
            name: nginx
            state: present
          tags: nginx_conf
          register: nginx_installed

        - name: Add app root directory to /etc/nginx/sites-enabled/default
          lineinfile:
            path: /etc/nginx/sites-enabled/default
            regex: 'root /var/www/html;'
            line: 'root /home/{{ Jenkins_Username }}/openjdk-test-tools/test-result-summary-client/build/;'
            state: present
          tags: nginx_conf

        - name: Add server name trss.adoptopenjdk.net /etc/nginx/sites-enabled/default
          lineinfile:
            path: /etc/nginx/sites-enabled/default
            regex: 'server_name _;'
            line: 'server_name trss.adoptopenjdk.net;'
            state: present
          tags: nginx_conf

        - name: Add Location /api/ to /etc/nginx/sites-enabled/default
          lineinfile:
            path: /etc/nginx/sites-enabled/default
            insertafter: 'server_name trss.adoptopenjdk.net;'
            line: 'location /api/ { proxy_pass http://localhost:3001; proxy_http_version 1.1; }'
            state: present
          tags: nginx_conf

        - name: Add file extension rule to /etc/nginx/sites-enabled/default
          lineinfile:
            path: /etc/nginx/sites-enabled/default
            insertafter: 'server_name trss.adoptopenjdk.net;'
            line: 'location ~ ^.+\..+$ { try_files $uri =404; }'
            state: present
          tags: nginx_conf

        - name: Restart nginx service
          service:
            name: nginx
            state: restarted
          tags: nginx_conf

        - name: Create forever service for frontend
          shell: forever-service install TRSSFrontend -e "NODE_ENV=production" -f " --workingDir {{ TRSS_working_dir }}" --script {{ TRSS_working_dir }}/frontend.js  -o " --configFile={{ TRSS_config_path }}"

        - name: Create forever service for backend
          shell: forever-service install TRSSBackend -e "NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 " -f " --workingDir {{ TRSS_working_dir }} " --script {{ TRSS_working_dir }}/backend.js  -o " --configFile={{ TRSS_config_path }}"

        - name: Add cron job to check for updates
          cron: name="Check for Updates every Sunday at 5am"
            weekday="6"
            minute="0"
            hour="5"
            user=root
            job="/usr/bin/apt-get update && /usr/bin/apt-get -y upgrade"
            state=present
