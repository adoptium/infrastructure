---
##########
# Ubuntu #
##########

#########################################
# Configure Repos and Update the system #
#########################################
- name: Install gnugp2 for S390x
  apt:
    name: gnupg2
    state: present
    update_cache: yes
  when: ansible_architecture == "s390x"
  tags: patch_update

- name: Install gnupg2 for aarch64
  apt:
    name: gnupg2
    state: present
    update_cache: yes
  when: ansible_architecture == "aarch64"
  tags: patch_update

- name: Add Azul Zulu GPG Package Signing Key for x86_64
  apt_key:
    url: https://repos.azulsystems.com/RPM-GPG-KEY-azulsystems
    state: present
  when:
    - ansible_architecture == "x86_64"
  tags: [patch_update, azul-key]

- name: Add Azul Zulu repository for x86_64
  apt_repository: repo='deb http://repos.azulsystems.com/ubuntu stable main'
  when:
    - ansible_architecture == "x86_64"
  tags: patch_update

- name: Run apt-get upgrade
  apt: upgrade=safe update_cache=yes
  tags: patch_update

############################
# Build Packages and tools #
############################
- name: Call Build Packages and Tools Task
  include_tasks: build_packages_and_tools.yml

##########################
# Additional build tools #
##########################
- name: Call Build Packages and Tools Task for OpenJFX
  package: "name={{ item }} state=latest"
  with_items: "{{ OpenJFX_Build_Tool_Packages }}"
  tags: [build_tools, build_tools_jfx]

- name: Install additional build tools for x86
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Build_Tools_x86 }}"
  when:
    - ansible_architecture == "x86_64"
  tags: build_tools

- name: Install additional build tools for PPC64LE
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Build_Tools_ppc64le }}"
  when:
    - ansible_architecture == "ppc64le"
  tags: build_tools

- name: Install additional build tools for S390x
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Build_Tools_s390x }}"
  when:
    - ansible_architecture == "s390x"
  tags: build_tools

- name: Install additional build tools for aarch64
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Build_Tools_aarch64 }}"
  when:
    - ansible_architecture == "aarch64"
  tags: build_tools

- name: Install additional build tools for !riscv64
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Build_Tools_not_riscv64 }}"
  when:
    - ansible_architecture != "riscv64"
  tags: build_tools

- name: Install additional build tools for riscv64
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Build_Tools_riscv64 }}"
  when:
    - ansible_architecture == "riscv64"
  tags: build_tools

- name: Install additional build tools for Ubuntu 20 +
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Build_Tools_Ubuntu20 }}"
  when:
    - ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "20"
  tags: build_tools

#########################
# Additional Test Tools #
#########################
- name: Install additional Test Tool Packages for x86_64
  package: "name={{ item }} state=latest"
  with_items: "{{ Test_Tool_Packages_x86_64 }}"
  when:
    - ansible_architecture == "x86_64"
  tags: test_tools

- name: Install additional Packages specific to Ubuntu 16
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Packages_Ubuntu16 }}"
  when:
    - ansible_distribution_major_version == "16"
  tags: test_tools

- name: Install additional Packages specific to Ubuntu 18
  package: "name={{ item }} state=latest"
  with_items: "{{ Additional_Packages_Ubuntu18 }}"
  when:
    - ansible_distribution_major_version == "18"
  tags: test_tools

- name: Download LibFFI6 v3.2.1_8 For Ubuntu 20 or 22 on S390X
  get_url:
    url: https://mirrors.mit.edu/ubuntu-ports/pool/main/libf/libffi/libffi6_3.2.1-8_s390x.deb
    dest: /tmp/libffi6_3.2.1-8_s390x.deb
    force: no
    mode: 0755
    checksum: sha256:05e456a2e8ad9f20db846ccb96c483235c3243e27025c3e8e8e358411fd48be9
  when:
    - (ansible_distribution_major_version == "20" and ansible_architecture == "s390x") or
      (ansible_distribution_major_version == "22" and ansible_architecture == "s390x")
  tags: test_tools

- name: Install LibFFI6 v3.2.1_8 For Ubuntu 20 or 22 on S390X
  apt: deb="/tmp/libffi6_3.2.1-8_s390x.deb"
  when:
    - (ansible_distribution_major_version == "20" and ansible_architecture == "s390x") or
      (ansible_distribution_major_version == "22" and ansible_architecture == "s390x")
  tags: test_tools

####################
# Set default Java #
####################
- name: Set default java version for x86_64
  alternatives:
    name: java
    path: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
  when:
    - (ansible_distribution_major_version == "14" and ansible_architecture == "x86_64") or
      (ansible_distribution_major_version == "16" and ansible_architecture == "x86_64")
  tags: default_java

- name: Set default java version for armv7l
  alternatives:
    name: java
    path: /usr/lib/jvm/java-8-openjdk-armhf/jre/bin/java
  when:
    - ansible_architecture == "armv7l"
  tags: default_java

- name: Set default java version for ppc64le
  alternatives:
    name: java
    path: /usr/lib/jvm/java-8-openjdk-ppc64el/jre/bin/java
  when:
    - ansible_distribution_major_version == "14"
    - ansible_architecture == "ppc64le"
  tags: default_java

##################
# Enable Locales #
##################
- name: Install 'locales' package
  package:
    name: locales
    state: present
  tags: locales

- name: Enable ja_JP locale
  locale_gen:
    name: ja_JP.UTF-8
    state: present
  tags: locales

- name: Enable ko_KR locale
  locale_gen:
    name: ko_KR.UTF-8
    state: present
  tags: locales

- name: Enable zh_CN locale
  locale_gen:
    name: zh_CN.UTF-8
    state: present
  tags: locales

- name: Enable zh_TW locale
  locale_gen:
    name: zh_TW.UTF-8
    state: present
  tags: locales
