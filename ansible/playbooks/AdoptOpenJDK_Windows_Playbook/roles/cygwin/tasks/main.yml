---
##########
# cygwin #
##########
- name: Test if Cygwin is already installed
  win_stat:
    path: 'C:\cygwin64\bin\jq.exe'
  register: cygwin_installed
  tags: cygwin

- name: Retrieve Cygwin setup
  win_get_url:
    url: https://cygwin.com/setup-x86_64.exe
    dest: C:\temp\cygwin.exe
    force: no
    checksum: 2e2e322b138f6337d1a9be71cc0d3b9bb05991c5ac72bd68cf3c1c5f309ecf30
    checksum_algorithm: sha256
  when: not cygwin_installed.stat.exists
  register: cygwin_download
  tags: cygwin

# If you update this with a new package, modify the "Test
# if installed" to look for something in the new package
- name: Install Cygwin
  win_shell: |
    Start-Process -Wait -FilePath 'C:\temp\cygwin.exe' -ArgumentList '--packages autoconf,automake,bsdtar,cmake,cpio,curl,gcc-core,git,gnupg,grep,jq,libtool,make,mingw64-x86_64-gcc-core,perl,rsync,unzip,wget,zip --quiet-mode --download --local-install --delete-orphans --site https://mirrors.kernel.org/sourceware/cygwin/ --local-package-dir C:\cygwin_packages --root C:\cygwin64'
  args:
    executable: powershell
  when: not cygwin_installed.stat.exists
  tags: cygwin

- name: Change git config to not replace Line endings
  win_shell: "C:/cygwin64/bin/git config --system core.autocrlf false"
  tags: cygwin

- name: Remove c:\cygwin64\bin from the path if it exists
  win_path:
    name: PATH
    elements:
      - 'C:\cygwin64\bin'
    scope: machine
    state: absent
  when: (not cygwin_installed.stat.exists)
  tags: cygwin

- name: Add C:\cygwin64\bin to the front of the path
  win_shell: |
    [Environment]::SetEnvironmentVariable("Path", "C:\cygwin64\bin;" + $env:Path, [System.EnvironmentVariableTarget]::Machine)
  args:
    executable: powershell
  when: (not cygwin_installed.stat.exists)
  tags: cygwin

- name: Reboot machine for PATH changes to take effect
  win_reboot:
    reboot_timeout: 1800
  when: (not cygwin_installed.stat.exists)
  tags:
    - cygwin
    - reboot
