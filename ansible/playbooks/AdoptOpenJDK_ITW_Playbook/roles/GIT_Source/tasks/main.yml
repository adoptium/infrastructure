---
##############
# GIT_Source #
##############

# Conditions:
# Check if git is installed. If so git_installed.rc will equal 0, then test if git is at the correct version level.
# If git_installed.rc does NOT equal 0 (not installed) or if git_installed.rc equals 0 (installed) and its at a lower version than 2.15 then...
# Process with downloing and installing git

- name: Test if git is installed on path
  shell: git --version >/dev/null
  failed_when: false
  register: git_installed
  tags:
    - git_source
    # Emits 'git used in place of git module'
    - skip_ansible_lint

- name: Test if git is installed at the correct version
  shell: git --version | sed -e 's/git version //g' | awk -F'[.]' '{print $1 "." $2}'
  when: git_installed.rc == 0
  register: git_version
  tags:
    - git_source
    # Emits 'git used in place of git module'
    - skip_ansible_lint

- name: Download git source
  get_url:
    url: https://www.kernel.org/pub/software/scm/git/git-2.15.0.tar.xz
    dest: /tmp/git-2.15.0.tar.xz
    mode: 0440
  when:
    - (git_installed.rc != 0 ) or (git_installed.rc == 0 and git_version.stdout is version_compare('2.15', operator='lt') )
    - ansible_distribution != "FreeBSD"
  tags: git_source

- name: Extract git source
  unarchive:
    src: /tmp/git-2.15.0.tar.xz
    dest: /tmp/
    copy: False
  when:
    - (git_installed.rc != 0 ) or (git_installed.rc == 0 and git_version.stdout is version_compare('2.15', operator='lt') )
    - ansible_distribution != "FreeBSD"
  tags: git_source

- name: Ensure curl-devel is installed on RHEL 6 before compiling git
  package: "name=curl-devel state=latest"
  when:
    - (ansible_distribution == "RedHat" and ansible_distribution_major_version == "6")
  tags:
    # TODO: Package installs should not use latest
    - skip_ansible_lint

- name: Compile and install git from source on RHEL/CentOS6
  shell: cd /tmp/git-2.15.0 && ./configure --with-curl=/usr/local/curl-7.61.1 --prefix=/usr/local --without-tcltk && make clean && make -j {{ ansible_processor_vcpus }} && sudo make install
  become: yes
  when:
    - (git_installed.rc != 0 ) or (git_installed.rc == 0 and git_version.stdout is version_compare('2.15', operator='lt') )
    - ansible_architecture != "s390x"
    - (( ansible_distribution == "RedHat" or ansible_distribution == "CentOS") and ansible_distribution_major_version == "6")
  tags: git_source

- name: Compile and install git from source on everything else
  shell: cd /tmp/git-2.15.0 && ./configure --prefix=/usr/local --without-tcltk && make clean && make -j {{ ansible_processor_vcpus }} && sudo make install
  become: yes
  when:
    - (git_installed.rc != 0 ) or (git_installed.rc == 0 and git_version.stdout is version_compare('2.15', operator='lt') )
    - ansible_architecture != "s390x"
    - ansible_distribution != "FreeBSD"
    - not(( ansible_distribution == "RedHat" or ansible_distribution == "CentOS") and ansible_distribution_major_version == "6")
  tags: git_source

- name: Compile and install git from source on s390x
  shell: cd /tmp/git-2.15.0 && ./configure --prefix=/usr/local --without-tcltk && make -j {{ ansible_processor_cores }} && sudo make install
  become: yes
  when:
    - (git_installed.rc != 0 ) or (git_installed.rc == 0 and git_version.stdout is version_compare('2.15', operator='lt') )
    - ansible_architecture == "s390x"
    - ansible_distribution != "FreeBSD"
  tags: git_source

- name: Remove system git if needed (yum)
  yum:
    name:
      - git
      - perl-Git
    state: absent
  when:
    - (git_installed.rc == 0 and git_version.stdout is version_compare('2.15', operator='lt') )
    - ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
  tags:
    - git_source
    - dont_remove_system

- name: Remove system git if needed (zypper)
  zypper:
    name: git
    state: absent
  when:
    - (git_installed.rc == 0 and git_version.stdout is version_compare('2.15', operator='lt') )
    - ansible_distribution == "SLES"
  tags:
    - git_source
    - dont_remove_system
