---
##########
# cygwin #
##########
- name: Test if Cygwin is already installed (jq.exe as marker)
  win_stat:
    path: "{{ Cygwin_INST_DIR }}\\bin\\jq.exe"
  register: cygwin_installed
  tags: cygwin

- name: Ensure temp and package directories exist
  win_file:
    path: "{{ item }}"
    state: directory
  loop:
    - "C:\\temp"
    - "{{ Cygwin_PACKAGE_DIR }}"
    - "{{ Cygwin_CACHE_DIR }}"
  tags: cygwin

- name: Retrieve Cygwin setup
  win_get_url:
    url: "https://cygwin.com/setup-x86_64.exe"
    dest: "C:\\temp\\cygwin.exe"
    force: no
    checksum: "46993d76d756bde18564f72a4ee07384cd82b447527ca406c8bfc034cb05c664"
    checksum_algorithm: sha256
  when: not cygwin_installed.stat.exists
  register: cygwin_download
  tags: cygwin

- name: Retrieve Cygwin Package Cache
  win_get_url:
    url: "https://ci.adoptium.net/userContent/cygwin/cygwin_cache_20240825.zip"
    dest: "C:\\temp\\cygwin_cache.zip"
    force: no
    checksum: "a2ec4dfbc67272312817228afb2bbff6f4ffc44df6088169ac11f191af00ec21"
    checksum_algorithm: sha256
  when: not cygwin_installed.stat.exists
  register: cygwin_cache_download
  tags: cygwin

# Unzip Cygwin Cache
- name: Unzip Cygwin Cache
  win_unzip:
    src: C:\TEMP\cygwin_cache.zip
    dest: "{{ Cygwin_CACHE_DIR }}"
  when: not cygwin_installed.stat.exists
  tags: cygwin

# Install strictly from the local cache (NO internet)
# Change How The Args Are Parsed To Improve PS Interpretation
- name: Install Cygwin From The Package Cache
  win_shell: |
    $setup = 'C:\temp\cygwin.exe'
    $list  = @(
      '--quiet-mode',
      '--local-install',
      '--delete-orphans',
      '--only-site',
      '--no-verify',
      '--no-version-check',
      '--root', '{{ Cygwin_INST_DIR }}',
      '--local-package-dir', '{{ Cygwin_CACHE_DIR }}',
      '--site', 'file:///{{ Cygwin_CACHE_DIR_POSIX }}',
      '--packages', 'autoconf,automake,bsdtar,cmake,cpio,curl,gcc-core,git,gnupg,gnupg2,grep,jq,libtool,make,mingw64-x86_64-gcc-core,perl,rsync,unzip,wget,zip'
    ) | ForEach-Object { if ($_ -match '\s') { '"{0}"' -f $_ } else { $_ } }

    $argString = $list -join ' '
    $p = Start-Process -FilePath $setup -ArgumentList $argString -NoNewWindow -Wait -PassThru
    if ($p.ExitCode -ne 0) { throw "Cygwin install from cache failed (exit $($p.ExitCode))" }
  args:
    executable: powershell
  when: not cygwin_installed.stat.exists
  tags: cygwin

- name: Change git config to not replace Line endings
  win_shell: "C:/cygwin64/bin/git config --system core.autocrlf false"
  tags: cygwin

- name: Remove c:\cygwin64\bin from the path if it exists
  win_path:
    name: PATH
    elements:
      - 'C:\cygwin64\bin'
    scope: machine
    state: absent
  when: (not cygwin_installed.stat.exists)
  tags: cygwin

- name: Add C:\cygwin64\bin to the front of the path
  win_shell: |
    [Environment]::SetEnvironmentVariable("Path", "C:\cygwin64\bin;" + $env:Path, [System.EnvironmentVariableTarget]::Machine)
  args:
    executable: powershell
  when: (not cygwin_installed.stat.exists)
  tags: cygwin

- name: Reboot machine for PATH changes to take effect
  win_reboot:
    reboot_timeout: 1800
  when: (not cygwin_installed.stat.exists)
  tags:
    - cygwin
    - reboot
