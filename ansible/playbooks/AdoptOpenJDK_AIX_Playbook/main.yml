---
########################################
# AdoptOpenJDK - Ansible Playbook for: #
# --------------- AIX ---------------  #
########################################

- hosts: all
  remote_user: root
  become: true
  environment:
    PATH: "/opt/IBM/xlC/13.1.3/bin:/opt/freeware/bin:{{ ansible_env.PATH }}"
    PERL_MB_OPT: "--install_base /opt/freeware"
    PERL_MM_OPT: "INSTALL_BASE=/opt/freeware"

  roles:
    - role: debug
      tags: debug

    # Roles are put into 6 groups
    ## AIX BOS install requirements
    ## AIX BOS configuration
    ## Core OSS (bash, unzip, gtar)
    ## AIX User Admin
    ## Additional Software
    ## OJDK Bootstraps

    # 1. AIX BOS install requirements

    # These packages are installed using installp - which can enlarge
    # filesystem space, as needed, on demand
    - openssl
    - security

    # 2. AIX BOS configuration

    - syslogs
    - crontab
    # TBD: additional tasks below that need to be promoted to
    # or migrated into an AIX setup role - in paritcular -
    # the tasks that setup the legal shells needed for user configuration
    # may need to be performed AFTER yum processing - rather than before

    # 3. Additional Software: both licensed and OSS

    # Note: although X11 is AIX BOS software - there is a chance that the
    # Ansible module unarchive: may be called - and that requires,
    # at a minimum, gtar and unzip to be available - regardless of need.
    # Likewise, the xlc files may also need the Ansible unarchive and
    # need to be evaluated after the CORE OSS software has been installed.
    - X11
    ## verify/install licensed IBM compilers
    - xlc_v13
    - xlc_v16

    # 4. Core OSS installation

    ## Note: this may actually already be performed - partially
    ## depending on how python - to use Ansible - has been prepared
    # yum based installation of additional software
    # installs some gnu packages required by ansible modules
    # Note: AIX File system configuration must be run now as RPM based software
    # cannot expand filesystem space on demand
    - aixfs
    - yum

    ## additional OSS packages
    - ant
    - ant_contrib

    # 5. AIX User Admin

    # users needed - wait until here to be sure bash is installed
    # tbd: Need other actions performed first - mainly adding /usr/bin/bash
    # to the list of legal shells.
    - role: rbac
      tags:
        - adoptopenjdk
        - users
    - role: users
      tags:
        - adoptopenjdk
        - users

    # 6. Install OJDK Bootstraps

    - role: bootjdk
      tags:
        - adoptopenjdk
        - bootjdk

    # 7. Modify /etc/hosts file to include ipv4 address and fqdn

    - hosts_file

  tasks:
    # TBD: as much as possible reorganize the tasks here into a appropriate role
    # And place it in one of the logical areas described above under roles:
    ######################################
    # Add bash to available login shells #
    ######################################
    - name: Add bash to available login shells
      replace:
        path: /etc/security/login.cfg
        regexp: 'shells = '
        replace: 'shells = /bin/bash,'
      tags: login_shell

    - name: Add bash to available login shells
      blockinfile:
        dest: /etc/shells
        block: |
          /bin/bash
      tags: login_shell

    # move to role later
    - name: Set variables for global environment
      blockinfile:
        dest: /etc/environment
        block: |
          AIXTHREAD_HRT=true
          PKG_CONFIG_PATH=/opt/freeware/lib64/pkgconfig:/opt/freeware/lib/pkgconfig
          PERL5LIB=/opt/freemarker/lib/perl5
      tags: login_shell

    - name: Add freeware and xlc to PATH for global environment
      replace:
        path: /etc/environment
        regexp: 'PATH=/usr/bin'
        replace: 'PATH=/opt/freeware/bin:/opt/IBM/xlC/13.1.3/bin:/usr/bin'
      tags: login_shell

    ##############
    # freemarker #
    ##############
    - name: Add freemarker to jenkins
      block:
        - name: Check for freemarker.jar existence
          stat:
            path: /home/{{ Jenkins_Username }}/freemarker.jar
          register: freemarker
          tags:
            - freemarker

        - name: "freemarker.jar found, skipping download"
          debug:
            msg: "freemarker.jar found, skipping download"
          when: not freemarker.stat.exists
          tags:
            - freemarker

        - name: Download and extract freemarker.jar
          unarchive:
            src: "https://sourceforge.net/{{ urldir }}/{{ urlfile }}"
            dest: /tmp/
            remote_src: true
            owner: "{{ Jenkins_Username }}"
            group: staff
            mode: 0755
          when: not freemarker.stat.exists
          tags:
            - freemarker
          vars:
            urldir: projects/freemarker/files/freemarker/2.3.8
            urlfile: freemarker-2.3.8.tar.gz

        - name: Move freemarker.jar to /home/{{ Jenkins_Username }} folder
          command:
            cmd: mv /tmp/freemarker-2.3.8/lib/freemarker.jar
              /home/{{ Jenkins_Username }}
          when: not freemarker.stat.exists
          tags:
            - freemarker

        - name: Clean freemarker tmp files
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - /tmp/freemarker-2.3.8
            - /tmp/freemarker-2.3.8.tar.gz
      tags: freemarker

    ###################
    # NTP Time Server #
    ###################
    - name: ensure NTP daemon is enabled
      replace:
        dest: /etc/rc.tcpip
        regexp: '^ *# *(start /usr/sbin/xntpd (.+)\n)'
        replace: '\1'
      tags: ntp

    - name: ensure NTP daemon is configured
      copy:
        content: |
          server 1.pool.ntp.org
          server 2.pool.ntp.org
          server 3.pool.ntp.org
          driftfile /etc/ntp.drift
          tracefile /etc/ntp.trace
        dest: /etc/ntp.conf
        owner: root
        group: system
        mode: 0664
      tags: ntp

    - name: Stop NTP daemon
      service: name=xntpd state=stopped
      changed_when: false
      tags: ntp

    - name: Start NTP daemon
      service: name=xntpd state=started
      changed_when: false
      tags: ntp

    ####################
    # Disable sendmail #
    ####################
    - name: ensure sendmail is stopped
      service: name=sendmail state=stopped
      tags: sendmail

    - name: ensure sendmail is disabled
      replace:
        dest: /etc/rc.tcpip
        regexp: '^ *(start /usr/lib/sendmail (.+)\n)'
        replace: '#\1'
      tags: sendmail

    ############################
    # Enable full core support #
    ############################
    - name: ensure full AIX core files are enabled
      command: chdev -l sys0 -a fullcore=true
      changed_when: false
      tags: fullcore

    #####################
    # Enable swap space #
    #####################
    - name: Verify paging space is at reasonable value
      vars:
        swap_lv: hd6
        target_ps: 2048
      shell: |
        pp_size=$(lsvg rootvg | grep "PP SIZE" | awk ' { print $6 } ')
        current_ps=$(lsps -s | tail -1 | awk -FM ' { print $1 } ')
        if [[ $current_ps -lt {{ target_ps }} ]]
        then
          # echo "Extending swap space {{ swap_lv }}"
          chps -s $(expr \( {{ target_ps }} - $current_ps \) / $pp_size) {{ swap_lv }}
        elif [[ $current_ps -gt {{ target_ps }} ]]
        then
          # echo "Shrinking swap space {{ swap_lv }}"
          chps -d $(expr \( $current_ps - {{ target_ps }} \) / $pp_size) {{ swap_lv }}
        fi
      register: chps
      changed_when: chps.stdout != ""
      tags:
        - swap
        - skip_ansible_lint
