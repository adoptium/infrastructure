###############################################################################
# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 4.2.4
#
#
# NOTES: This config file provides you with some example command definitions
#        that you can reference in host, service, and contact definitions.
#       
#        You don't need to keep commands in a separate file from your other
#        object definitions.  This has been done just to make things easier to
#        understand.
#
###############################################################################


################################################################################
#
# SAMPLE NOTIFICATION COMMANDS
#
# These are some example notification commands.  They may or may not work on
# your system without modification.  As an example, some systems will require 
# you to use "/usr/bin/mailx" instead of "/usr/bin/mail" in the commands below.
#
################################################################################


# 'notify-host-by-email' command definition
#define command{
#	command_name	notify-host-by-email
#	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
#	}

# 'notify-service-by-email' command definition
#define command{
#	command_name	notify-service-by-email
#	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
#	}


define command {
	command_name notify-service-by-slack
command_line /usr/local/nagios/bin/slack_nagios.pl -field slack_channel=#infrastructure-bot -field HOSTALIAS="$HOSTNAME$" -field SERVICEDESC="$SERVICEDESC$" -field SERVICESTATE="$SERVICESTATE$" -field SERVICEOUTPUT="$SERVICEOUTPUT$" -field NOTIFICATIONTYPE="$NOTIFICATIONTYPE$"
# command_line /usr/local/bin/slack_nagios.pl -field slack_channel=#infrastructure-bot -field HOSTALIAS="$HOSTNAME$" -field SERVICEDESC="$SERVICEDESC$" -field SERVICESTATE="$SERVICESTATE$" -field SERVICEOUTPUT="$SERVICEOUTPUT$" -field NOTIFICATIONTYPE="$NOTIFICATIONTYPE$"
}

define command {
command_name notify-host-by-slack
command_line /usr/local/nagios/bin/slack_nagios.pl -field slack_channel=#infrastructure-bot -field HOSTALIAS="$HOSTNAME$" -field HOSTSTATE="$HOSTSTATE$" -field HOSTOUTPUT="$HOSTOUTPUT$" -field NOTIFICATIONTYPE="$NOTIFICATIONTYPE$"
#command_line /usr/local/bin/slack_nagios.pl -field slack_channel=#infrastructure-bot -field HOSTALIAS="$HOSTNAME$" -field HOSTSTATE="$HOSTSTATE$" -field HOSTOUTPUT="$HOSTOUTPUT$" -field NOTIFICATIONTYPE="$NOTIFICATIONTYPE$"
}


################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################


# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check-host-alive' command definition
define command{
        command_name    check-host-alive
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
        }

# noping for systems that block ICMP
define command{
	command_name	noping
	command_line	$USER1$/check_tcp -p 22 -H $HOSTADDRESS$  -w 3000.0,80% -c 5000.0,100% 
	}
define command{
        command_name    noping_windows
        command_line    $USER1$/check_tcp -p 3389 -H $HOSTADDRESS$  -w 3000.0,80% -c 5000.0,100%
        }

define command{
	command_name	noping_nsclient
	command_line	$USER1$/check_tcp -p 12489 -H $HOSTADDRESS$  -w 3000.0,80% -c 5000.0,100%
        }

################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML 
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#        various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

# 'check_local_disk' command definition
define command{
        command_name    check_local_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
        }

# 'check_jenkins_disk' command definition
define command{
	command_name	check_jenkins_disk
	command_line	$USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
	}

# 'check_local_load' command definition
define command{
        command_name    check_local_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }


# 'check_local_procs' command definition
define command{
        command_name    check_local_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
        }


# 'check_local_users' command definition
define command{
        command_name    check_local_users
        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
        }


# 'check_local_swap' command definition
define command{
	command_name	check_local_swap
	command_line	$USER1$/check_swap -w $ARG1$ -c $ARG2$
	}


# 'check_local_mrtgtraf' command definition
define command{
	command_name	check_local_mrtgtraf
	command_line	$USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
	}

define command{
	command_name	check_local_mem
	command_line	$USER1$/check_mem -f -C -w $ARG1$ -c  $ARG2$
	}

define command{
        command_name    check_local_apt
        command_line    $USER1$/check_apt
        }

################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

# 'check_ftp' command definition
define command{
        command_name    check_ftp
        command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_hpjd' command definition
define command{
        command_name    check_hpjd
        command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
        }


# 'check_snmp' command definition
define command{
        command_name    check_snmp
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_http' command definition
define command{
        command_name    check_http
        command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$
        }


# Add on commands to check http, http with alt port num, and https websites
define command{
        command_name    check_website_http
        command_line    $USER1$/check_website -w $ARG1$ -c $ARG2$ $ARG3$
        }
define command{
        command_name    check_website_http_port
        command_line    $USER1$/check_website -w $ARG1$ -c $ARG2$ -p $ARG3$ $ARG4$
        }
define command{
        command_name    check_website_https
        command_line    $USER1$/check_website -w $ARG1$ -c $ARG2$ -s $ARG3$
        }


# 'check_ssh' command definition
define command{
	command_name	check_ssh
	command_line	$USER1$/check_ssh $ARG1$ $HOSTADDRESS$ 
	}


# 'check_dhcp' command definition
define command{
	command_name	check_dhcp
	command_line	$USER1$/check_dhcp $ARG1$
	}


# 'check_ping' command definition
define command{
        command_name    check_ping
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
        }


# 'check_pop' command definition
define command{
        command_name    check_pop
        command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
        }


# 'check_imap' command definition
define command{
        command_name    check_imap
        command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
        }


# 'check_smtp' command definition
define command{
        command_name    check_smtp
        command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_tcp' command definition
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}


# 'check_udp' command definition
define command{
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}


# 'check_nt' command definition
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
# test: 12489
	}

################################################################################
#
# SAMPLE PERFORMANCE DATA COMMANDS
#
# These are sample performance data commands that can be used to send performance
# data output to two text files (one for hosts, another for services).  If you
# plan on simply writing performance data out to a file, consider using the 
# host_perfdata_file and service_perfdata_file options in the main config file.
#
################################################################################


# 'process-host-perfdata' command definition
define command{
	command_name	process-host-perfdata
	command_line	/usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /usr/local/nagios/var/host-perfdata.out
	}


# 'process-service-perfdata' command definition
define command{
	command_name	process-service-perfdata
	command_line	/usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /usr/local/nagios/var/service-perfdata.out
	}

# Defining remote command
# MAC OS
define command{
        command_name remote_check_users_mac
        command_line /usr/local/nagios/libexec/check_nrpe -H $HOSTADDRESS$ -c check_users -a '-w 5 -c 10'
}

define command{
        command_name remote_check_load_mac
        command_line /usr/local/nagios/libexec/check_nrpe -H $HOSTADDRESS$ -c check_load -a '-w 30,25,20 -c 30,25,20'
}

define command{
        command_name remote_check_disk_mac
        command_line /usr/local/nagios/libexec/check_nrpe -H $HOSTADDRESS$ -c check_disk -a '-w 10% -c 7% -p /tmp'
}

define command{
        command_name remote_check_zombie_proc_mac
        command_line /usr/local/nagios/libexec/check_nrpe -H $HOSTADDRESS$ -c check_procs -a '-w 5 -c 10 -s Z'
}

define command{
        command_name remote_check_total_proc_mac
        command_line /usr/local/nagios/libexec/check_nrpe -H $HOSTADDRESS$ -c check_procs -a -k '-w 300 -c 400'
}
define command{
        command_name remote_check_sw_up_mac
        command_line $USER1$/check_nrpe -t 360 -H $HOSTADDRESS$ -c check_sw_up
}
# check_by_ssh
define command {
	command_name	check_by_ssh
	command_line 	$USER1$/check_by_ssh -t 360 -H $HOSTADDRESS$ -C '$ARG1$'
}

#check_by_ssh_port
define command {
	command_name	check_by_ssh_port
	command_line $USER1$/check_by_ssh -t 360 -H $HOSTADDRESS$ -p $ARG1$ -C '$ARG2$'
}

# check_ssl_cert (Added by: Willsparker on 05/10/2020)
define command {
	command_name	check_ssl_cert
	command_line	$USER1$/check_ssl_cert -H $ARG1$
}

# Check Jenkins_agent (Added by: Willsparker on 29/10/2020)
define command {
         command_name   check_agent
         command_line   $USER1$/check_agent $ARG1$
}

# check_nagios_sync (Added by: Willsparker on 18/01/2021)
define command {
         command_name   check_nagios_sync
         command_line   $USER1$/check_nagios_sync
}

define command {
         command_name  check_inventory
         command_line  $USER1$/check_inventory
}

define command {
         command_name  check_label
         command_line  $USER1$/check_label "$ARG1$" $ARG2$ $ARG3$
}

# https checks with check_http
define command{
	command_name    check_https_url
	command_line    $USER1$/check_http --ssl -H '$HOSTADDRESS$' -u $ARG1$
}
# Check for Updates using a key
# YUM
#define command{
#        command_name    check_ssh_yum
#        command_line    $USER1$/check_by_ssh -l '$ARG1$' -i '$ARG2$' -H '$HOSTADDRESS$' -C /usr/local/nagios/libexec/check_yum
#}
# DNF
#define command{
#        command_name    check_ssh_dnf
#        command_line    $USER1$/check_by_ssh -l '$ARG1$' -i '$ARG2$' -H '$HOSTADDRESS$' -C /usr/local/nagios/libexec/check_dnf
#}
# Zypper
#define command{
#        command_name    check_ssh_zypper
#        command_line    $USER1$/check_by_ssh -l '$ARG1$' -i '$ARG2$' -H '$HOSTADDRESS$' -C /usr/local/nagios/libexec/check_zypper
#}
define command{
        command_name    check_passwd
        command_line    $USER1$/check_passwd -w $ARG1$ -c $ARG2$
        }

 

# begin nagiosgraph configuration
# command to process nagios performance data for nagiosgraph
define command {
  command_name process-service-perfdata-for-nagiosgraph
  command_line /usr/local/nagios/nagiosgraph/bin/insert.pl
}
# end nagiosgraph configuration

