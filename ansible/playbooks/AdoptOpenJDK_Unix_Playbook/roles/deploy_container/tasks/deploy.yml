---

- name: Set docker build command
  set_fact:
    docker_build_command: "docker build"
    docker_run_command: "docker run"
    arm32_suffix: ""

- name: Set docker buildx command if building arm32 container
  set_fact:
    docker_build_command: "docker buildx build --platform linux/v7/arm"
    arm32_suffix: ".ARM32"
    ansible_architecture: arm
    docker_run_command: "docker run --platform linux/v7/arm"
  when: build_arm32 is defined and build_arm32 == "yes"

# Dockerfiles are transferred from the controller node onto the dockerhost to be used to build and run docker containers
- name: Transfer dockerfile
  copy:
    src: "roles/DockerStatic/Dockerfiles/Dockerfile.{{ docker_image }}"
    dest: "/tmp/Dockerfile.{{ docker_image }}"

# For images built on non x86_64 dockerhosts
- name: Translate architecture in dockerfile
  replace:
    dest: /tmp/Dockerfile.{{ docker_image }}
    regexp: "x64"
    replace: "{{ ansible_architecture }}"
  when: ansible_architecture != "x86_64"

- name: Set jenkins authorized_Key in dockerfiles
  replace:
    dest: /tmp/Dockerfile.{{ docker_image }}
    regexp: "Jenkins_User_SSHKey"
    replace: "{{ Jenkins_User_SSHKey }}"

- name: Build {{ docker_image }} docker images {{ docker_build_command }}
  command: "{{ docker_build_command }} --cpu-period=100000 --cpu-quota=800000 -t aqa_{{ docker_image }}{{ arm32_suffix }} --memory=6G -f /tmp/Dockerfile.{{ docker_image }} /tmp/"

# Finds the highest port number already assigned and +1
- name: Find available port
  shell: docker ps --format \"\{\{\.Ports\}\}\" | awk -F[:-] '{print $2}' | sort | tail -n 1
  register: docker_port_output

- name: Set docker_port variable if empty
  set_fact:
    docker_port: 32000
  when: docker_port_output.stdout == ""

- name: Set docker_port variable when non empty
  set_fact:
    docker_port: "{{ docker_port_output.stdout | int + 1 }}"
  when: not (docker_port_output.stdout == "")

- name: Run {{ docker_image }} docker container
  command: "{{ docker_run_command }} --restart unless-stopped -p {{ docker_port }}:22 --cpuset-cpus='0-3' --memory=6G --detach --name {{ docker_image | upper }}.{{ docker_port }}{{ arm32_suffix }} aqa_{{ docker_image }}{{ arm32_suffix }}"
