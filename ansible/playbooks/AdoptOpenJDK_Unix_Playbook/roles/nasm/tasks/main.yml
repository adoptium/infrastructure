---
#############################
# nasm                      #
# OpenJ9 requirement on x86 #
# See eclipse/openj9#2418   #
#############################

# Conditions:
# Check for gcc v7 as this is a nasm compile requirement
# If gcc v7 if found check if nasm is installed when ansible_architecture is x86_64
# If so, nasm_installed.rc will equal 0, then check if its the version required
# If not, download, compile and install

# checking the common location for ubuntu package installs
- name: Checking for /usr/bin/gcc-7
  stat: path=/usr/bin/gcc-7
  register: gcc7
  tags: nasm
- name: Setting CC to /usr/bin/gcc-7 if found
  set_fact:
    CC: "/usr/bin/gcc-7"
  when: gcc7.stat.exists and CC is not defined
  tags: nasm

- name: Checking for devtools-7 installation
  stat: path=/opt/rh/devtoolset-7/root/usr/bin/gcc
  register: gcc7
  tags: nasm
- name: Setting CC to devtools-7 if found
  set_fact:
    CC: "/opt/rh/devtoolset-7/root/usr/bin/gcc"
  when: gcc7.stat.exists and CC is not defined
  tags: nasm

- name: Checking for gcc-7.5 binary installation
  stat: path=/usr/local/gcc/bin/gcc-7.5
  register: gcc7
  tags: nasm

- name: Setting CC to gcc-7.5 binary found
  set_fact:
    CC: "/usr/local/gcc/bin/gcc-7.5"
  when: gcc7.stat.exists and CC is not defined
  tags: nasm

## For Ubuntu 22+ Set GCC to gcc_11

- name: Checking for /usr/bin/gcc-11
  stat: path=/usr/bin/gcc-11
  register: gcc11
  tags: nasm

- name: Setting CC to gcc-11 binary found
  set_fact:
    CC: "/usr/bin/gcc-11"
  when: gcc11.stat.exists and ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 22
  tags: nasm

- name: Print 'CC' variable
  debug:
    msg: "VARIABLE CC SET TO {{ CC }}"
  when: CC is defined
  tags: nasm

- name: Test if nasm is installed on path
  shell: nasm --version >/dev/null 2>&1
  failed_when: false
  register: nasm_installed
  changed_when: false
  when: CC is defined
  tags: nasm

- name: Print 'nasm_installed' variable
  debug:
    msg: "VARIABLE nasm_installed SET TO {{ nasm_installed.rc }}"
  when: nasm_installed.rc is defined
  tags: nasm

- name: Capture nasm is installed version
  shell: set -o pipefail | nasm --version 2>/dev/null | grep version | awk '{print $3}'
  when:
    - (nasm_installed.rc is defined) and (nasm_installed.rc == 0 )
  register: nasm
  changed_when: false
  tags: nasm

- name: Download nasm sources
  shell: cd /tmp && wget https://www.nasm.us/pub/nasm/releasebuilds/2.13.03/nasm-2.13.03.tar.gz
  when:
    - (nasm_installed.rc is defined) and ((nasm_installed.rc != 0 ) or (nasm_installed.rc == 0 and nasm.stdout is version_compare('2.13.03', operator='ne')) )
  tags: nasm

- name: Extract nasm sources
  unarchive:
    src: /tmp/nasm-2.13.03.tar.gz
    dest: /tmp/
    copy: False
  when:
    - (nasm_installed.rc is defined) and ((nasm_installed.rc != 0 ) or (nasm_installed.rc == 0 and nasm.stdout is version_compare('2.13.03', operator='ne')) )
  tags: nasm

## Patch NASM Source On Ubuntu 22.04 due to bug with compiling with gcc 8+
## See With https://src.fedoraproject.org/rpms/nasm/raw/0cc3eb244bd971df81a7f02bc12c5ec259e1a5d6/f/0001-Remove-invalid-pure_func-qualifiers.patch

- name: Patch NASM 13.03 Source
  lineinfile:
    path: /tmp/nasm-2.13.03/include/nasmlib.h
    regexp: '^void pure_func seg_init\(void\);.*$'
    line: 'void seg_init(void);'
  when:
    - (nasm_installed.rc is defined) and ((nasm_installed.rc != 0 ) or (nasm_installed.rc == 0 and nasm.stdout is version_compare('2.13.03', operator='ne')) ) and (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 22)
  tags: nasm

- name: Patch NASM 13.03 Source
  lineinfile:
    path: /tmp/nasm-2.13.03/include/nasmlib.h
    regexp: '^int32_t pure_func seg_alloc\(void\);.*$'
    line: 'int32_t seg_alloc(void);'
  when:
    - (nasm_installed.rc is defined) and ((nasm_installed.rc != 0 ) or (nasm_installed.rc == 0 and nasm.stdout is version_compare('2.13.03', operator='ne')) ) and (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 22)
  tags: nasm

- name: Running ./configure & make for nasm
  shell: cd /tmp/nasm-2.13.03 && CC={{ CC }} ./configure -prefix=/usr/local && make install
  when:
    - (nasm_installed.rc is defined) and ((nasm_installed.rc != 0 ) or (nasm_installed.rc == 0 and nasm.stdout is version_compare('2.13.03', operator='ne')) )
  tags: nasm

- name: Remove downloaded packages for nasm
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/nasm-2.13.03
    - /tmp/nasm-2.13.03.tar.gz
  failed_when: false
  tags: nasm
