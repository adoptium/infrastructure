---
##########
# Alpine #
##########

############################
# Build Packages and tools #
############################
- name: Call Build Packages and Tools Task
  include_tasks: build_packages_and_tools.yml

- name: Checking for /usr/lib/jvm
  stat: path=/usr/lib/jvm
  register: usr_lib_jvm_exists
  tags: build_tools

- name: Creating /usr/lib/jvm if not found
  file:
    path: /usr/lib/jvm
    state: directory
    owner: root
    mode: 0755
  when:
    - not usr_lib_jvm_exists.stat.exists
  tags: build_tools

- name: Install JDK for x64
  when: ansible_architecture == "x86_64"
  block:
    - name: Check if zulu-7 is already installed in the target location
      stat: path=/usr/lib/jvm/jdk-7
      register: zulu7_installed
      tags: build_tools

    - name: Install latest zulu-7 release if not already installed
      unarchive:
        src: https://cdn.azul.com/zulu/bin/zulu7.52.0.11-ca-jdk7.0.332-linux_x64.tar.gz
        dest: /usr/lib/jvm/
        remote_src: yes
      when:
        - not zulu7_installed.stat.exists
      tags: build_tools

    - name: Create symlink to point at zulu-7
      file:
        src: /usr/lib/jvm/zulu7.52.0.11-ca-jdk7.0.332-linux_x64
        dest: /usr/lib/jvm/jdk-7
        state: link
      when:
        - not zulu7_installed.stat.exists
      tags: build_tools

- name: Install JDK for aarch64
  when: ansible_architecture == "aarch64"
  block:
    - name: Install java 8 from Alpine repositories
      package: "name=openjdk8 state=installed"
      tags: build_tools

    # Using jdk-8 path name for compatibility with the build dockerfile
    # ENV statements until we replace this with a Temurin 8
    - name: Check if jdk-8 symlink is in place (TEMPORARY)
      stat: path=/usr/lib/jvm/jdk-8
      register: jdk8_installed
      tags: build_tools

    - name: Create symlink to point at openjdk8
      file:
        src: /usr/lib/jvm/java-8-openjdk
        dest: /usr/lib/jvm/jdk-8
        state: link
      when:
        - not jdk8_installed.stat.exists
      tags: build_tools

    # Fudge as we don't have access to a JDK7 bootjdk for alpine
    - name: Check if jdk-7 symlink is in place (TEMPORARY)
      stat: path=/usr/lib/jvm/jdk-7
      register: jdk7_installed
      tags: build_tools

    - name: Create symlink to point at openjdk8
      file:
        src: /usr/lib/jvm/java-8-openjdk
        dest: /usr/lib/jvm/jdk-7
        state: link
      when:
        - not jdk7_installed.stat.exists
      tags: build_tools

    - name: Install java 11 from Alpine repositories
      package: "name=openjdk11 state=installed"
      tags: build_tools

    # Using jdk-11 path name for compatibility with the build dockerfile
    # ENV statements until we replace this with a Temurin 11
    - name: Check if jdk-11 symlink is in place (TEMPORARY)
      stat: path=/usr/lib/jvm/jdk-11
      register: jdk11_installed
      tags: build_tools

    - name: Create symlink to point at openjdk11
      file:
        src: /usr/lib/jvm/java-11-openjdk
        dest: /usr/lib/jvm/jdk-11
        state: link
      when:
        - not jdk11_installed.stat.exists
      tags: build_tools

    - name: Check if zulu-16 is already installed in the target location
      stat: path=/usr/lib/jvm/jdk-16
      register: zulu16_installed
      tags: build_tools

    - name: Install latest zulu-16 release if not already installed
      unarchive:
        src: https://cdn.azul.com/zulu/bin/zulu16.32.15-ca-jdk16.0.2-linux_musl_aarch64.tar.gz
        dest: /usr/lib/jvm/
        remote_src: yes
      when:
        - not zulu16_installed.stat.exists
      tags: build_tools

    - name: Create symlink to point at zulu-16
      file:
        src: /usr/lib/jvm/zulu16.32.15-ca-jdk16.0.2-linux_musl_aarch64
        dest: /usr/lib/jvm/jdk-16
        state: link
      when:
        - not zulu16_installed.stat.exists
      tags: build_tools
