---
################################
# Visual Studio Community 2022 #
################################

- name: Check the Windows version
  win_shell: |
    Get-WmiObject -Class Win32_OperatingSystem | Select-Object -ExpandProperty Version
  register: windows_version

- name: Test if VS 2022 is installed
  win_stat:
    path: 'C:\Program Files\Microsoft Visual Studio\2022\Community'
  register: vs2022_installed
  tags: adoptopenjdk

- name: Install VS2022
  when: (not vs2022_installed.stat.exists) and (windows_version.stdout_lines[0] | regex_search('^(10\.|11\.|2016|2019|2022)'))
  tags: adoptopenjdk
  block:
    - name: Transfer VS2022 Layout File
      win_copy:
        src: /Vendor_Files/windows/vs_layout_2022.zip
        dest: C:\TEMP\VS2022_Layout.zip
        remote_src: no
      failed_when: false

    # Check For The Transferred File & Exit If AdoptOpenJDK Run
    - name: Check If Layout Has Transferred
      win_stat:
        path: 'C:\TEMP\VS2022_Layout.zip'
      register: vs2022_layout_ready

    - name: Get SHA256 checksum of the file
      win_shell: |
        $filePath = "C:\TEMP\VS2022_Layout.zip"
        $expectedChecksum = "29567E33B5361E4BAD36DFDFF83FEB3DDFDF0518122237E8273F0FA4E11E8B74"
        $actualChecksum = Get-FileHash -Path $filePath -Algorithm SHA256 | Select-Object -ExpandProperty Hash

        if ($actualChecksum -ne $expectedChecksum) {
            Write-Output "Checksum mismatch"
            Write-Output "Actual Checksum: $actualChecksum"
            Write-Output "Expect Checksum: $expectedChecksum"
            exit 1
        }
      register: checksum_result
      when: (vs2022_layout_ready.stat.exists)
      changed_when: false

    # Exit Play If No VS2022 Layout & AdoptOpenJDK = true
    # This Is Defined Behaviour - This Shouldnt Occur But If It Does, Its Captured Here
    - name: Exit With Error When No Layout Within AdoptOpenJDK
      fail:
        msg: "The VS2022 Layout File Appears To Be Missing From Vendor_Files"
      when: (not vs2022_layout_ready.stat.exists)

    # Install VS2022 From Layout For AdoptOpenJDK
    - name: Unzip VS2022 Layout
      win_unzip:
        src: C:\TEMP\VS2022_Layout.zip
        dest: C:\TEMP
      when: (vs2022_layout_ready.stat.exists)

    - name: Run Visual Studio 2022 Installer From Layout
      win_shell: |
          Start-Process -Wait -FilePath 'C:\temp\VSLayout2022\vs_community.exe' -ArgumentList '--nocache --quiet --norestart --wait --noweb --add Microsoft.VisualStudio.Workload.NativeDesktop --includeRecommended --includeOptional --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.Tools.ARM64 --add Microsoft.VisualStudio.Component.VC.ATL.ARM64 --add Microsoft.VisualStudio.Component.VC.MFC.ARM64'
      args:
        executable: powershell
      when: (vs2022_layout_ready.stat.exists)

    - name: Register Visual Studio Community 2022 DIA SDK shared libraries
      win_command: 'regsvr32 /s "{{ item }}"'
      with_items:
        - C:\Program Files\Microsoft Visual Studio\2022\Community\DIA SDK\bin\msdia140.dll
        - C:\Program Files\Microsoft Visual Studio\2022\Community\DIA SDK\bin\amd64\msdia140.dll

    - name: Remove VS2022 Zip File
      win_file:
        path: C:\TEMP\VS2022_Layout.zip
        state: absent

    - name: Remove VS2022 Unzipped Layout
      win_file:
        path: C:\temp\VSLayout2022
        state: absent

- name: Test if VS 2022 is installed(non adopt)
  win_stat:
    path: 'C:\Program Files\Microsoft Visual Studio\2022\Community'
  register: vs2022_installed

# Download & Install VS2022 When No Layout & Not AdoptOpenJDK
# This is the target that you're redirected to when you go to https://aka.ms/vs/17/release/vs_community.exe
- name: Download Visual Studio Community 2022
  win_get_url:
    url: 'https://aka.ms/vs/17/release/vs_Community.exe'
    checksum: 5d75942b56df540a0325e764e7eb46498ec12e15b73adea05d8aa58d323efd90
    checksum_algorithm: sha256
    dest: 'C:\temp\vs_community22.exe'
    force: no
  when: (not vs2022_installed.stat.exists) and (windows_version.stdout_lines[0] | regex_search('^(10\.|11\.|2016|2019|2022)'))

- name: Run Visual Studio 2022 Installer From Download
  win_shell: |
      Start-Process -Wait -FilePath 'C:\temp\vs_community22.exe' -ArgumentList '--wait --add Microsoft.VisualStudio.Workload.NativeDesktop --includeRecommended --includeOptional --quiet --norestart'
  args:
    executable: powershell
  when: (not vs2022_installed.stat.exists) and (windows_version.stdout_lines[0] | regex_search('^(10\.|11\.|2016|2019|2022)'))
  register: vs2022_error
  failed_when: vs2022_error.rc != 0 and vs2022_error.rc != 3010

- name: Install ARM64 components
  win_shell: Start-Process -FilePath 'C:\temp\vs_community22.exe' -Wait -NoNewWindow -ArgumentList
    'modify --installPath "C:\Program Files (x86)\Microsoft Visual Studio\2022\Community" --quiet
    --add Microsoft.VisualStudio.Component.VC.Tools.ARM64 --add Microsoft.VisualStudio.Component.VC.ATL.ARM64 --add Microsoft.VisualStudio.Component.VC.MFC.ARM64'
  when: (not vs2022_installed.stat.exists) and (windows_version.stdout_lines[0] | regex_search('^(10\.|11\.|2016|2019|2022)'))

- name: Register Visual Studio Community 2022 DIA SDK shared libraries
  win_command: 'regsvr32 /s "{{ item }}"'
  with_items:
    - C:\Program Files\Microsoft Visual Studio\2022\Community\DIA SDK\bin\msdia140.dll
    - C:\Program Files\Microsoft Visual Studio\2022\Community\DIA SDK\bin\amd64\msdia140.dll
  when: (not vs2022_installed.stat.exists) and (windows_version.stdout_lines[0] | regex_search('^(10\.|11\.|2016|2019|2022)'))

- name: Reboot machine after Visual Studio installation
  win_reboot:
    reboot_timeout: 1800
    shutdown_timeout: 1800
  when: (not vs2022_installed.stat.exists) and (windows_version.stdout_lines[0] | regex_search('^(10\.|11\.|2016|2019|2022)'))
  tags:
    - reboot
