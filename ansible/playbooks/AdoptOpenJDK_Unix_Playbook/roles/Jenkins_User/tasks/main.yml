---
################
# Jenkins_User #
################
- name: Set Home Folder for Jenkins user
  set_fact:
    home_folder: /home/{{ Jenkins_Username }}
  tags: [jenkins_user, adoptopenjdk]

- name: Set Home Folder for Jenkins user (macos)
  set_fact:
    home_folder: /Users/{{ Jenkins_Username }}
  when:
    - ansible_distribution == "MacOSX"
  tags: [jenkins_user, adoptopenjdk]

- name: Set Home Folder for Jenkins user (Solaris)
  set_fact:
    home_folder: /export/home/{{ Jenkins_Username }}
  when:
    - ansible_distribution == "Solaris"
  tags: [jenkins_user, adoptopenjdk]

- name: Create Jenkins account group for SLES
  group:
    name: "{{ Jenkins_Username }}"
    state: present
  when:
    - ansible_distribution == "SLES"
  tags: [jenkins_user, adoptopenjdk]

- name: Create Jenkins user
  action: user name={{ Jenkins_Username }} state=present home={{ home_folder }} shell=/bin/bash
  failed_when: false
  when: ansible_distribution != "MacOSX"
  tags: [jenkins_user, adoptopenjdk]

- name: Create Jenkins user (macOS)
  action: user name={{ Jenkins_Username }} group=staff state=present home={{ home_folder }} shell=/bin/bash
  when: ansible_distribution == "MacOSX"
  tags: [jenkins_user, adoptopenjdk]
  become: true

- name: Enable SSH login for Jenkins user (macOS)
  command: dseditgroup -o edit -a {{ Jenkins_Username }} -t staff com.apple.access_ssh
  failed_when: false
  when: ansible_distribution == "MacOSX"
  tags: [jenkins_user, adoptopenjdk]

- name: Create Jenkins user's home folder
  file:
    path: /home/{{ Jenkins_Username }}
    state: directory
    owner: "{{ Jenkins_Username }}"
    group: "{{ Jenkins_Username }}"
    mode: 0700
  when:
    - ansible_architecture == "s390x"
  tags: [jenkins_user, adoptopenjdk]

- name: Create Jenkins user's home folder (Solaris)
  file:
    path: /export/home/{{ Jenkins_Username }}
    state: directory
    owner: "{{ Jenkins_Username }}"
    group: staff
    mode: 0700
  when:
    - ansible_distribution == "Solaris"
  tags: [jenkins_user, adoptopenjdk]

- name: Set Jenkins user's home folder (Solaris)
  command: usermod -d /export/home/jenkins/ jenkins
  when:
    - ansible_distribution == "Solaris"
  tags: [jenkins_user, adoptopenjdk]

- name: Set authorized key for Jenkins user
  authorized_key:
    user: "{{ Jenkins_Username }}"
    state: present
    key: "{{ lookup('file', 'authorized_key.pub') }}"
  tags: [jenkins_user, jenkins_authorized_key, adoptopenjdk]
  become: true

- name: Add needed items to "{{ home_folder }}/.ssh/known_hosts"
  known_hosts:
    name: "{{ item.name }}"
    key: "{{ item.value }}"
    path: "{{ home_folder }}/.ssh/known_hosts"
    state: present
  with_items: "{{known_keys}}"
  tags: [jenkins_user, adoptopenjdk]
  become: true
  become_user: '{{ Jenkins_Username }}'

- name: Add Jenkins user to the audio group
  user: name={{ Jenkins_Username }}
    groups=audio
    append=yes
  when:
    - (ansible_distribution == "Ubuntu" or ansible_distribution == "SLES")
    - ansible_architecture != "armv7l"
  tags: [jenkins_user, adoptopenjdk]
  become: true

- name: Unset expiry on user account for Redhat for Jenkins user
  command: chage -M -1 -E -1 {{ Jenkins_Username }}
  tags:
    - jenkins_user
    - adoptopenjdk
    # TODO: write a condition when NOT to run this step
    - skip_ansible_lint
  when: ansible_distribution != "MacOSX" and ansible_distribution != "Solaris"

- name: Unset expiry on user account for Redhat for root
  command: chage -M -1 -E -1 root
  tags:
    - jenkins_user
    - adoptopenjdk
    # TODO: write a condition when NOT to run this step
    - skip_ansible_lint
  when: ansible_distribution != "MacOSX" and ansible_distribution != "Solaris"

- name: Ensure proper limits are set in /etc/security/limits.conf
  lineinfile:
    path: /etc/security/limits.conf
    line: "{{ Jenkins_Username }} {{ item.limit_type }} {{ item.limit_name }} {{ item.limit_value }}"
    state: present
  with_items:
    - {limit_type: 'hard', limit_name: 'nofile', limit_value: '1048576'}
    - {limit_type: 'hard', limit_name: 'nproc', limit_value: 'unlimited'}
    - {limit_type: 'hard', limit_name: 'core', limit_value: 'unlimited'}
  when:
    - ansible_architecture == "x86_64"
    - ansible_distribution == "RedHat" or ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7"
  tags:
    - jenkins_user

#additional settings for user jenkins
- name: check if bin paths are exist before add them to {{ home_folder }}/.bashrc
  stat: path={{item}}
  with_items: 
    - /opt/homebrew/bin/
    - /usr/local/bin/
  register: mac_bin_paths
  tags:
    - jenkins_user

- name: configure {{ home_folder }}/.bashrc
  copy:
    dest: "{{ home_folder }}/.bashrc"
    content: "export PATH={{ mac_bin_paths | join(':') }}:{{ lookup('ansible.builtin.env', 'PATH') }}"
    owner: "{{ Jenkins_Username }}"
    mode: 0700
  become: true
  tags:
    - jenkins_user

- name: create folder "{{ home_folder }}/openjdk_cache"
  file: 
    path: "{{ home_folder }}/openjdk_cache"
    state: directory
    owner: "{{ Jenkins_Username }}"
    mode: 0755
  become: true
  tags:
    - jenkins_user

- name: fetch required JDK repo into {{ home_folder }}/openjdk_cache
  shell: 
    cmd: |
      git init --bare
      git remote -v | grep jdk8   || git remote add jdk8 https://github.com/ibmruntimes/openj9-openjdk-jdk8.git
      git remote -v | grep jdk11  || git remote add jdk11 https://github.com/ibmruntimes/openj9-openjdk-jdk11.git 
      git remote -v | grep jdk    || git remote add jdk https://github.com/ibmruntimes/openj9-openjdk-jdk.git 
      git remote -v | grep openj9 || git remote add openj9 https://github.com/eclipse-openj9/openj9.git 
      git remote -v | grep omr    || git remote add omr https://github.com/eclipse-openj9/openj9-omr.git
      git fetch --all
    chdir: "{{ home_folder }}/openjdk_cache"
  become: true
  become_user:  "{{ Jenkins_Username }}"
  tags:
    - jenkins_user
